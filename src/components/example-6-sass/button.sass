// src/component/example-6-sass/button.sass

$sass-pink: #ce649a
$bright: hotpink

.sassy-button
  background-color: $sass-pink
  border-radius: 8px
  color: white
  font-size: 24pt
  padding: 15px 50px
  width: 300px
  
  &:hover
    background-color: $bright

// Benefits and pitfalls
// very indent oriented

// Sass introduces powerful features like variables, mixins, nesting, inheritance, and more, that aren’t available in standard CSS. These features allow for writing more maintainable and concise styles. Sass helps in organizing large stylesheets efficiently and enables reusability, making it easier to manage styles in large-scale projects.

// Sass files need to be preprocessed into standard CSS before they can be used in a website. This adds an extra step in the development process, requiring tools for compilation and potentially increasing the initial setup complexity. Newcomers to Sass may also face a learning curve in understanding its syntax and features, particularly if they’re only familiar with traditional CSS.